/**
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http.js';

export class CreateEditRequest {
    /**
    * ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them.
    */
    'model': string;
    /**
    * The input text to use as a starting point for the edit.
    */
    'input'?: string;
    /**
    * The instruction that tells the model how to edit the prompt.
    */
    'instruction': string;
    /**
    * How many edits to generate for the input and instruction.
    */
    'n'?: number;
    /**
    * What [sampling temperature](https://towardsdatascience.com/how-to-sample-from-language-models-682bceb97277) to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.  We generally recommend altering this or `top_p` but not both. 
    */
    'temperature'?: number;
    /**
    * An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.  We generally recommend altering this or `temperature` but not both. 
    */
    'top_p'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "model",
            "baseName": "model",
            "type": "string",
            "format": ""
        },
        {
            "name": "input",
            "baseName": "input",
            "type": "string",
            "format": ""
        },
        {
            "name": "instruction",
            "baseName": "instruction",
            "type": "string",
            "format": ""
        },
        {
            "name": "n",
            "baseName": "n",
            "type": "number",
            "format": ""
        },
        {
            "name": "temperature",
            "baseName": "temperature",
            "type": "number",
            "format": ""
        },
        {
            "name": "topP",
            "baseName": "top_p",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CreateEditRequest.attributeTypeMap;
    }

    public constructor() {
    }
}

