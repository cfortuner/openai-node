/**
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http.js';

export class CreateSearchRequest {
    /**
    * Query to search against the documents.
    */
    'query': string;
    /**
    * Up to 200 documents to search over, provided as a list of strings.  The maximum document length (in tokens) is 2034 minus the number of tokens in the query.  You should specify either `documents` or a `file`, but not both. 
    */
    'documents'?: Array<string>;
    /**
    * The ID of an uploaded file that contains documents to search over.  You should specify either `documents` or a `file`, but not both. 
    */
    'file'?: string;
    /**
    * The maximum number of documents to be re-ranked and returned by search.  This flag only takes effect when `file` is set. 
    */
    'max_rerank'?: number;
    /**
    * A special boolean flag for showing metadata. If set to `true`, each document entry in the returned JSON will contain a \"metadata\" field.  This flag only takes effect when `file` is set. 
    */
    'return_metadata'?: boolean;
    /**
    * A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). 
    */
    'user'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "query",
            "baseName": "query",
            "type": "string",
            "format": ""
        },
        {
            "name": "documents",
            "baseName": "documents",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "file",
            "baseName": "file",
            "type": "string",
            "format": ""
        },
        {
            "name": "maxRerank",
            "baseName": "max_rerank",
            "type": "number",
            "format": ""
        },
        {
            "name": "returnMetadata",
            "baseName": "return_metadata",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "user",
            "baseName": "user",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CreateSearchRequest.attributeTypeMap;
    }

    public constructor() {
    }
}

